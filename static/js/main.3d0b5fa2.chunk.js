(this.webpackJsonprone=this.webpackJsonprone||[]).push([[0],{37:function(e,t,a){},39:function(e,t){},50:function(e,t,a){"use strict";a.r(t);var s=a(9),n=a.n(s),i=a(25),c=a.n(i),o=(a(37),a(18));const l=["function addHash(string memory _hash) public","function findHash(string memory _hash) public view returns (bool)","function getAllHashes() public view returns (string[] memory)"],r="0xC2ff2C30c4d6108804bc09738F1622983333335B";a(48);var h=a(3);var d=function(){const[e]=Object(s.useState)(null),[t,a]=Object(s.useState)(""),[n,i]=Object(s.useState)(""),[c,d]=Object(s.useState)(null),m=function(){const{ethereum:e}=window;if(!e)return void console.error("MetaMask is not installed!");const t=new o.a.providers.Web3Provider(e);t.send("eth_requestAccounts",[]);const a=t.getSigner();return new o.a.Contract(r,l,a)}();function u(e,t){let a=0;const s=Math.min(e.length,t.length);for(let n=0;n<s;n++)e[n]!==t[n]&&a++;return a}return Object(h.jsx)("section",{className:"section",children:Object(h.jsxs)("div",{className:"container",children:[Object(h.jsx)("h1",{className:"title",children:"Rone: An application to find image provenance"}),Object(h.jsx)("p",{children:"An emerging issue with the deployment of generative image models is the ability to create artificial images that can influence politics, markets, and an individual\u2019s privacy. Rone is a robust and efficient system to permanently record the creation of an AI-generated image and, conversely, allow users to determine if an image was AI-generated."}),Object(h.jsx)("p",{children:"To utilize the application please upload an image (png, jpg, webp). The hash of that image which be shown and you will be able to either record that hash onto the chain (simulating a model automatically adding it the ledger) or you can copy that hash and search the ledger for that hash. You will know if an exact match is found, a similar image is found (the same image but edited in some form), or if a match does not exist."}),Object(h.jsx)("div",{className:"file has-name is-boxed",children:Object(h.jsxs)("label",{className:"file-label",children:[Object(h.jsx)("input",{className:"file-input",type:"file",onChange:e=>{const t=e.target.files[0];if(t){window.pHash.hash(t).then((e=>{a(e.toHex())})).catch((e=>{console.error("Error computing hash:",e)}))}}}),Object(h.jsxs)("span",{className:"file-cta",children:[Object(h.jsx)("span",{className:"file-icon",children:Object(h.jsx)("i",{className:"fas fa-upload"})}),Object(h.jsx)("span",{className:"file-label",children:"Choose a file\u2026"})]}),e&&Object(h.jsx)("span",{className:"file-name",children:e.name})]})}),Object(h.jsx)("button",{className:"button is-primary",onClick:async()=>{if(t.trim())try{const e=await m.addHash(t);await e.wait(),alert("Hash recorded successfully!")}catch(e){alert("Failed to record hash: ".concat(e.message))}else alert("Please upload a file to generate a hash.")},children:"Record Hash of Uploaded Image"}),Object(h.jsxs)("p",{children:["Hash: ",t]}),Object(h.jsx)("h2",{className:"title",children:"Search for an image hash"}),Object(h.jsxs)("div",{className:"field has-addons",children:[Object(h.jsx)("div",{className:"control is-expanded",children:Object(h.jsx)("input",{className:"input",type:"text",value:n,onChange:e=>i(e.target.value),placeholder:"Enter hash to search"})}),Object(h.jsx)("div",{className:"control",children:Object(h.jsx)("button",{className:"button is-link",onClick:async()=>{if(n.trim())try{const e=await m.getAllHashes();let t=null,a=Number.MAX_SAFE_INTEGER;for(const s of e){const e=u(s,n);e<a&&(a=e,t=s)}d(0==a?"Exact Match Found":a<=8?"Likely match found: ".concat(t," with Hamming distance of ").concat(a):"No similar hash found.")}catch(e){alert("Failed to verify hash: ".concat(e.message))}else alert("Please enter a hash with which to search.")},children:"Search for Hash"})})]}),c&&Object(h.jsx)("p",{className:"verification-result",children:c})]})})};var m=e=>{e&&e instanceof Function&&a.e(3).then(a.bind(null,52)).then((t=>{let{getCLS:a,getFID:s,getFCP:n,getLCP:i,getTTFB:c}=t;a(e),s(e),n(e),i(e),c(e)}))};c.a.createRoot(document.getElementById("root")).render(Object(h.jsx)(n.a.StrictMode,{children:Object(h.jsx)(d,{})})),m()}},[[50,1,2]]]);
//# sourceMappingURL=main.3d0b5fa2.chunk.js.map