{"version":3,"sources":["useContract.js","App.js","reportWebVitals.js","index.js"],"names":["contractABI","contractAddress","App","file","useState","hash","setHash","hashToVerify","setHashToVerify","verificationResult","setVerificationResult","contract","ethereum","window","console","error","signer","ethers","providers","Web3Provider","getSigner","Contract","useContract","hammingDistance","str1","str2","dist","length","Math","min","i","_jsx","className","children","_jsxs","type","onChange","event","target","files","pHash","then","toHex","catch","name","onClick","async","trim","tx","addHash","wait","alert","concat","message","value","e","placeholder","hashes","getAllHashes","closestHash","minDistance","Number","MAX_SAFE_INTEGER","storedHash","distance","reportWebVitals","onPerfEntry","Function","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","React","StrictMode"],"mappings":"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","file":"static/js/main.c0cc0a87.chunk.js","sourcesContent":["import { ethers } from 'ethers';\r\n\r\nconst contractABI = [\r\n    \"function addHash(string memory _hash) public\",\r\n    \"function findHash(string memory _hash) public view returns (bool)\",\r\n    \"function getAllHashes() public view returns (string[] memory)\"\r\n];\r\n\r\nconst contractAddress = \"0xC2ff2C30c4d6108804bc09738F1622983333335B\";\r\n\r\n\r\nexport function useContract() {\r\n    const { ethereum } = window;\r\n    if (!ethereum) {\r\n        console.error(\"MetaMask is not installed!\");\r\n        return;\r\n    }\r\n\r\n    const provider = new ethers.providers.Web3Provider(ethereum);\r\n    const signer = provider.getSigner(\"0x5787EACF377D2174F2030F27B956095CE68D5651\");\r\n\r\n    const contract = new ethers.Contract(contractAddress, contractABI, signer);\r\n\r\n    return contract;\r\n}\r\n","import React, { useState } from 'react';\nimport { useContract } from './useContract';\nimport 'bulma/css/bulma.min.css';  \n\nfunction App() {\n  const [file] = useState(null);\n  const [hash, setHash] = useState('');\n  const [hashToVerify, setHashToVerify] = useState('');\n  const [verificationResult, setVerificationResult] = useState(null);\n  const contract = useContract();\n\n  const onFileChange = event => {\n    const file = event.target.files[0];\n    if (file) {\n      const pHash = window.pHash;\n      pHash.hash(file).then(hash => {\n        setHash(hash.toHex());\n      }).catch(error => {\n        console.error('Error computing the image hash:', error);\n      });\n    }\n  };\n\n  const recordHash = async () => {\n    if (!hash.trim()) {\n      alert('Please upload a file to generate a hash.');\n      return;\n    }\n    try {\n      const tx = await contract.addHash(hash);\n      await tx.wait();\n      alert('Hash recorded successfully!');\n    } catch (error) {\n      alert(`Failed to record hash: ${error.message}`);\n    }\n  };\n\n  const verifyHash = async () => {\n    if (!hashToVerify.trim()) {\n      alert('Please enter a hash with which to search.');\n      return;\n    }\n    try {\n      const hashes = await contract.getAllHashes();\n      let closestHash = null;\n      let minDistance = Number.MAX_SAFE_INTEGER;\n\n      for (const storedHash of hashes) {\n        const distance = hammingDistance(storedHash, hashToVerify);\n        if (distance < minDistance) {\n          minDistance = distance;\n          closestHash = storedHash;\n        }\n      }\n\n      if (minDistance < 2) {  // Define your own threshold for \"similarity\"\n        setVerificationResult(`Closest match found: ${closestHash} with Hamming distance of ${minDistance}`);\n      } else {\n        setVerificationResult(\"No similar hash found.\");\n      }\n    } catch (error) {\n      alert(`Failed to verify hash: ${error.message}`);\n    }\n  };\n\n  function hammingDistance(str1, str2) {\n    let dist = 0;\n    const length = Math.min(str1.length, str2.length);\n    for (let i = 0; i < length; i++) {\n        if (str1[i] !== str2[i]) {\n            dist++;\n        }\n    }\n    return dist;\n}\n\n  return (\n    <section className=\"section\">\n      <div className=\"container\">\n        <h1 className=\"title\">Rone: An application to find image provenance</h1>\n        <div className=\"file has-name is-boxed\">\n          <label className=\"file-label\">\n            <input className=\"file-input\" type=\"file\" onChange={onFileChange} />\n            <span className=\"file-cta\">\n              <span className=\"file-icon\">\n                <i className=\"fas fa-upload\"></i>\n              </span>\n              <span className=\"file-label\">\n                Choose a fileâ€¦\n              </span>\n            </span>\n            {file && <span className=\"file-name\">{file.name}</span>}\n          </label>\n        </div>\n        <button className=\"button is-primary\" onClick={recordHash}>Record Hash of Uploaded Image</button>\n        <p>Hash: {hash}</p>\n\n        <h2 className=\"title\">Search for an image hash</h2>\n        <div className=\"field has-addons\">\n          <div className=\"control is-expanded\">\n            <input className=\"input\" type=\"text\" value={hashToVerify} onChange={(e) => setHashToVerify(e.target.value)} placeholder=\"Enter hash to search\" />\n          </div>\n          <div className=\"control\">\n            <button className=\"button is-link\" onClick={verifyHash}>Search for Hash</button>\n          </div>\n        </div>\n        {verificationResult && (\n          <p className=\"verification-result\">{verificationResult}</p>\n        )}\n      </div>\n    </section>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}